#!/bin/bash

BLACK=""
LIGHT_BLACK=""
RED=""
LIGHT_RED=""
GREEN=""
LIGHT_GREEN=""
BROWN=""
YELLOW=""
BLUE=""
LIGHT_BLUE=""
MAGENTA=""
LIGHT_MAGENTA=""
CYAN=""
LIGHT_CYAN=""
WHITE=""
LIGHT_GRAY=""
DEFAULT=""  

# Colors
set_colors() {
    BLACK="\[\033[1;30m\]"
    LIGHT_BLACK="\[\033[0;30m\]"
    RED="\[\033[1;31m\]"
    LIGHT_RED="\[\033[0;31m\]"
    GREEN="\[\033[1;32m\]"
    LIGHT_GREEN="\[\033[0;32m\]"
    BROWN="\[\033[1;33m\]"
    YELLOW="\[\033[0;33m\]"
    BLUE="\[\033[1;34m\]"
    LIGHT_BLUE="\[\033[0;34m\]"
    MAGENTA="\[\033[1;35m\]"
    LIGHT_MAGENTA="\[\033[0;35m\]"
    CYAN="\[\033[1;36m\]"
    LIGHT_CYAN="\[\033[0;36m\]"
    WHITE="\[\033[1;37m\]"
    LIGHT_GRAY="\[\033[0;37m\]"
    DEFAULT="\[\033[0m\]"   
}

parse_git_dirty() {
    local output=")"

    [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && output=" *${output}"
    
    echo "${output}"
}

parse_git_branch() {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

# If the terminal accept colors.
case $TERM in
    xterm*)
        set_colors       
        ;;
esac        

PROMPT="\n$LIGHT_BLACK("

# For user root we want another color here
if [ "$UID" -eq 0 ]; then
    USER_COLOR="$RED"
else
    USER_COLOR="$WHITE"
fi         

PROMPT=${PROMPT}"$USER_COLOR\u$LIGHT_GREEN@$WHITE\h$LIGHT_BLACK)-($WHITE\j$LIGHT_BLACK)-($WHITE\$(date '+%d %h %H:%M')$LIGHT_BLACK)$MAGENTA" 

# Check if __git_ps1 is installed  
if [ $(command -v __git_ps1) ]; then

    # set git PS1 settings
    export GIT_PS1_SHOWDIRTYSTATE=true
    export GIT_PS1_SHOWSTASHSTATE=true
    export GIT_PS1_SHOWUNTRACKEDFILES=true
    export GIT_PS1_SHOWUPSTREAM="auto"

    PROMPT=${PROMPT}"\$(__git_ps1 ' (%s)' )\n$LIGHT_BLACK($GREEN\w$LIGHT_BLACK)-($GREEN\$(ls -1 | wc -l | sed 's: ::g') files, \$(ls -lah | grep -m 1 total | sed 's/total //')b$LIGHT_BLACK) $USER_COLOR\$$DEFAULT"

else
    PROMPT=${PROMPT}"\$([[ -n \$(git branch 2> /dev/null) ]] && echo ' (')\$(parse_git_branch)\n$LIGHT_BLACK($GREEN\w$LIGHT_BLACK)-($GREEN\$(ls -1 | wc -l | sed 's: ::g') files, \$(ls -lah | grep -m 1 total | sed 's/total //')b$LIGHT_BLACK) $USER_COLOR\$$DEFAULT"
fi 

PS1=${PROMPT}




