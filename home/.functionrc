#!/bin/bash

# Load Weather
function weather() {
    local location=''
    local cache_file='/tmp/weather.txt'
    local cache=3600
    local update='false'
    local modify=''
    local now=$(date +%s)
    local diff=''

    if [[ -n "$1" ]]; then
        location="~$1"
        cache_file="/tmp/weather_${location}.txt"
    fi

    if [[ ! -f "${cache_file}" ]]; then
        update='true'
    else
        modify="$(stat -f "%m" "${cache_file}" 2>/dev/null)"
        diff=$((now-modify))
        if [[ ${diff} -ge ${cache} ]]; then
            update='true'
        fi
    fi

    if [[ "${update}" == 'true' ]]; then
        curl "http://wttr.in/${location}" > "${cache_file}"
    fi

   cat "${cache_file}"
}

# Docker clean
dcl() {
    local volumes=$(docker volume ls -q -f 'dangling=true')
    local images=$(docker images -f 'dangling=true' -q)

    test -n "${volumes}" && docker volume rm -f $(docker volume ls -q -f 'dangling=true')
    test -n "${images}" && docker rmi $(docker images -f 'dangling=true' -q)
}

# Docker ps
function dps()  {
    docker ps $@ --format "table{{ .Names }}\\t{{ .Status }}\\t{{ .Command }}\\t{{ .Image }}\\t{{ .Ports }}" | sort -k1 | awk '
      NR % 2 == 0 {
        printf "\033[0m";
      }
      NR % 2 == 1 {
        printf "\033[1m";
      }
      NR == 1 {
        PORTSPOS = index($0, "PORTS");
        PORTS = "PORTS";
        PORTSPADDING = "\n";
        for(n = 1; n < PORTSPOS; n++)
          PORTSPADDING = PORTSPADDING " ";
      }
      NR > 1 {
        PORTS = substr($0, PORTSPOS);
        gsub(/, /, PORTSPADDING, PORTS);
      }
      {
        printf "%s%s\n", substr($0, 0, PORTSPOS - 1), PORTS;
      }
      END {
        printf "\033[0m";
      }
    '
}

# Docker ps all
function dpsa() { 
    dps -a $@;
}

